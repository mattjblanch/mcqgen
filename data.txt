© SwiftPOS Pty Ltd. (Commercial in Confidence) 1
SwiftPOS API
Date Version Name Change
29/08/2016 1.0 Allan Wright Initial version.
06/04/2018 1.1 Allan Wright Updated list of breaking changes.
Overview
This document is to provide information when necessary to allow experienced programmers access 
to the SwiftPOS API. Support for this interface is chargeable and is not part of a regular standard 
maintenance. It serves as a document which can be used for developers wishing to consume the 
SwiftPOS API and as an outline of the technical implementation.
Although this software and documentation have been fully tested and reviewed, both are provided 
solely "as is" and without warranty of any kind. SwiftPOS Pty Ltd specifically disclaims all warranties, 
expressed or implied, including, but not limited to, implied warranties of merchantability and fitness 
for a particular purpose with respect to defects in the diskette(s), documentation, software, and the 
license granted herein.
IN NO EVENT SHALL SWIFTPOS PTY LTD BE LIABLE FOR ANY LOSS OF PROFIT OR ANY OTHER 
DAMAGE, INCLUDING BUT NOT LIMITED TO, SPECIAL, INCIDENTAL, COMMERCIAL, CONSEQUENTIAL 
OR OTHER DAMAGES OF ANY KIND RESULTING FROM THE USE OF THIS SOFTWARE OR ITS 
DOCUMENTATION.
SOFTWARE PRODUCT LICENSE:
You may not reverse engineer, decompile, or disassemble this software product. You may not rent 
or lease this software product. When you purchase this software, you do not own it - you only own a 
license to use it for its intended use.
WARNING
SwiftPOS name and documentation are protected by Australian copyright laws. Any and all 
unauthorized use of this product which includes but is not limited to copyright infringements, 
unauthorized "look-and-feel" infringements, and documentation infringements will result in civil and 
criminal penalties, and will be prosecuted to the maximum extent of the law.
A copyright infringer is liable for owner's actual damages as well as any additional profits that the 
owner may have earned as a result of the infringement. If the copyright is committed wilfully, the 
court can award up to $100,000 in statutory damages. A copyright owner may elect an award of 
statutory damages rather than actual damages and profits.
SwiftPOS Pty Ltd, 10/135 Ferny Way, Ferny Hills QLD 4055. ACN: 079142662
© SwiftPOS Pty Ltd. (Commercial in Confidence) 2
Installation
SwiftPOS API is packaged with SwiftPOS Back Office, in addition to the other web applications 
developed by SwiftPOS Pty Ltd. There is detailed documentation regarding the installation of the 
web store which can be referred to for further detail regarding the setup of Abyss or IIS. This 
installation guide focuses on the steps which are specific to the SwiftPOS API while giving a brief 
overview of the initial installation steps that are shared with the other web applications.
1. Obtain and run a SwiftPOS Back Office installer MSI.
2. Proceed through the installation until you reach the step which specifies which features to 
install (pictured below). Click the button next to Web Applications and choose to install it. 
Do the same for Setup IIS Application if you are using IIS.
3. Proceed through the rest of the installation.
4. Run SwiftPOS Back Office and download the latest version if the installer you used was not 
up to date.
5. Assuming the default installation directory, open C:\Program Files\Samford 
Software\BackOffice\WebApps\web.config and verify the connection string named 
Samford.Web.Core.Data.Connection is configured for the database that you wish to use the 
SwiftPOS API with. If it is not then update the connection string and save the file.
6. In SwiftPOS Back Office, open the Web Apps Setup form from the Administration menu 
(connected to the same database as specified in web.config mentioned above). Check the 
Deployment Url setting and ensure that it points to where the web applications are 
installed, http://localhost/SwiftPOS API by default. Enter any other required settings and 
save the changes.
7. Select the Locations tab and either create a new location if none exist or edit the existing 
location assuming that it is not already being used for a web store. Set the Location Type to 
© SwiftPOS Pty Ltd. (Commercial in Confidence) 3
Web API and provide values for all other required settings such as Terminal Id and NetPOS 
Host/IP then save the changes.
8. Open a web browser and attempt to navigate to the following URL:
http://localhost/SwiftPOS API/swagger.
9. If an error is displayed then please refer to the documentation which details the installation 
and configuration of the web store as this contains information regarding common 
installation problems that can occur.
Upon successful navigation to the URL above, SwiftPOS API is ready for use, pending any database 
configuration changes which need to be made by the SwiftPOS Reseller or the client. Such 
configuration may include assigning products to web families or creating members and vouchers 
that will be used by the SwiftPOS API during testing.
Using HTTPS
Communication with the API can be secured through the use of HTTPS and is strongly 
recommended. To configure the API to communicate over HTTPS you will need to perform the 
following tasks:
1. Obtain and install an SSL certificate in IIS. For more information regarding the installation of 
SSL certificates please see the MSDN article: http://msdn.microsoft.com/enus/library/ms751408.aspx.
2. Configure the service application to use the SSL certificate. For more information regarding 
site bindings please see the MSDN article and follow the Add SSL Binding section: 
http://msdn.microsoft.com/en-us/library/hh556232.aspx.
© SwiftPOS Pty Ltd. (Commercial in Confidence) 4
Swagger
SwiftPOS API exposes a web based tool called Swagger UI which allows developers to explore 
SwiftPOS API and execute the API calls. The screenshot below shows how swagger groups the API
calls based on the type of resource and includes a description of what each API call does:
The following screenshots show the type of information displayed when selecting a specific API call, 
in this case GET /API/Member/{id}. Details about the data returned, expected input parameters and 
response codes are all included. The best way to find out more is to have a go yourself!
© SwiftPOS Pty Ltd. (Commercial in Confidence) 5
API Keys
API calls are authenticated through the use of API keys. API keys work on a sliding expiration basis 
so continual use of the API will not require continual authorisation calls. The diagram below shows 
how session keys are handled between the client and server.
1. The client calls GET API/Authorisation to prove their identity. The client provides a SwiftPOS 
location number, SwiftPOS clerk number and their password in the request.
2. The server validates the provided credentials. If the credentials are valid then an API key is 
returned back to the client. If the credentials were invalid then no API key will be returned 
in the response. The API key is valid for 20 minutes (default). It is important to note that all 
subsequent requests made using the API key are tied to the location number provided when 
requesting authorisation. If a request needs to be made using another location then a new 
session key should be requested.
3. The client calls GET API/Member/{id} to retrieve details about a member. The API key is 
provided as a HTTP header.
4. The server validates the provided API key to ensure that it is valid. When the server returns 
a response, a new API key is provided which is valid for 20 minutes from the time that the 
server processed the latest request, not 20 minutes from the time when the client originally 
called GET API/Authorisation.
5. The client stores the latest API key received from the server. If the client only keeps the first 
API key it receives then the session key will not continue to work on a sliding expiration 
basis.
© SwiftPOS Pty Ltd. (Commercial in Confidence) 6
Demo System
SwiftPOS hosts a demo system which allows other developers to discover and test calls to SwiftPOS 
API without having to install it locally. The URL of the demo system is as follows:
http://webstores.swiftpos.com.au:4000/swiftapi/swagger
Please note that when requesting an API key on the demo system you can authenticate using the 
following details:
Location Id: 1
User Id: 0
Password: 0
SwiftPOS API Changes
SwiftPOS Pty Ltd may occasionally, where required, make breaking changes to SwiftPOS API. Such 
changes will be documented in the relevant section of the documentation that they relate to. If you 
are currently using the SwiftPOS API in a production environment then you should check the 
documentation before upgrading to new versions of software provided by Samford Software.
After an object or property is made obsolete, every effort will be made to continue supporting the 
object/property for a period of 6 months. Once a period of 6 months has elapsed, the 
object/property may be removed at any time without warning.
The following changes have occurred since the initial release of v7:
• The path api/Transaction has been made obsolete. Please use the path 
api/Member/{id}/Transaction instead.
• The path api/Voucher has been made obsolete. Please use the path 
api/Member/{id}/Voucher instead.
….end of document